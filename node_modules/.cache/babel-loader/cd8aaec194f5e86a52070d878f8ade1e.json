{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YOGES\\\\Desktop\\\\Learning\\\\internship react project\\\\my-dash-frontend\\\\src\\\\components\\\\graphD3.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //  1] Setup Initial data and settings ------------//\n  const initialData = [{\n    name: \"Car\",\n    value: 10\n  }, {\n    name: \"Food\",\n    value: 3\n  }, {\n    name: \"Telephone\",\n    value: 9\n  }, {\n    name: \"Electricity\",\n    value: 7\n  }, {\n    name: \"Cinema\",\n    value: 7\n  }];\n  const width = 500;\n  const height = 150;\n  const padding = 20;\n  const maxValue = 20; // Maximum data value\n\n  const [chartdata, setChartdata] = useState(initialData);\n  const svgRef = useRef(); //  2] Setup random data generator and SVG canvas -//\n\n  const newData = () => chartdata.map(function (d) {\n    d.value = Math.floor(Math.random() * (maxValue + 1));\n    return d;\n  });\n\n  useEffect(() => {\n    //  3] Setup functions for Scales ------------------//\n    //xscales\n    const xScale = d3.scalePoint().domain(chartdata.map(d => d.name)).range([0 + padding, width - padding]);\n    console.log(\"Start - End\", xScale(\"Car\"), xScale(\"Cinema\")); //Yscales\n\n    const yScale = d3.scaleLinear().domain([0, d3.max(chartdata, function (d) {\n      return d.value;\n    })]).range([height - padding, 0 + padding]);\n    console.log(\"Start - End\", yScale(0), yScale(10)); //  4] Setup functions to draw Lines ---------------//\n\n    const line = d3.line().x(d => xScale(d.name)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n    console.log(\"chart draw commands\", line(chartdata)); //  5] Draw line        ---------------------------//\n\n    d3.select(svgRef.current).select(\"path\").attr(\"d\", value => line(chartdata)).attr(\"fill\", \"none\").attr(\"stroke\", \"white\"); //  6] Setup functions to draw X and Y Axes --------//\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale); //  7] Draw x and y Axes   -------------------------//\n\n    d3.select(\"#xaxis\").remove();\n    d3.select(svgRef.current).append(\"g\").attr(\"transform\", `translate(0,${height - padding})`).attr(\"id\", \"xaxis\").call(xAxis);\n    d3.select(\"#yaxis\").remove();\n    d3.select(svgRef.current).append(\"g\").attr(\"transform\", `translate(${padding},0)`).attr(\"id\", \"yaxis\").call(yAxis);\n  }, [chartdata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"chart\",\n        ref: svgRef,\n        viewBox: \"0 0 500 150\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"\",\n          fill: \"none\",\n          stroke: \"white\",\n          strokeWidth: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"butto\",\n          onClick: () => setChartdata(newData()),\n          children: \"Click to refresh expenses data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VtzfLOvFWzEBUKdM46jcGehSjhQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","d3","App","initialData","name","value","width","height","padding","maxValue","chartdata","setChartdata","svgRef","newData","map","d","Math","floor","random","xScale","scalePoint","domain","range","console","log","yScale","scaleLinear","max","line","x","y","curve","curveMonotoneX","select","current","attr","xAxis","axisBottom","yAxis","axisLeft","remove","append","call"],"sources":["C:/Users/YOGES/Desktop/Learning/internship react project/my-dash-frontend/src/components/graphD3.jsx"],"sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction App() {\r\n  //  1] Setup Initial data and settings ------------//\r\n\r\n  const initialData = [\r\n    {\r\n      name: \"Car\",\r\n      value: 10,\r\n    },\r\n    {\r\n      name: \"Food\",\r\n      value: 3,\r\n    },\r\n    {\r\n      name: \"Telephone\",\r\n      value: 9,\r\n    },\r\n    {\r\n      name: \"Electricity\",\r\n      value: 7,\r\n    },\r\n    {\r\n      name: \"Cinema\",\r\n      value: 7,\r\n    },\r\n  ];\r\n\r\n  const width = 500;\r\n  const height = 150;\r\n  const padding = 20;\r\n  const maxValue = 20; // Maximum data value\r\n\r\n  const [chartdata, setChartdata] = useState(initialData);\r\n\r\n  const svgRef = useRef();\r\n\r\n  //  2] Setup random data generator and SVG canvas -//\r\n  const newData = () =>\r\n    chartdata.map(function (d) {\r\n      d.value = Math.floor(Math.random() * (maxValue + 1));\r\n      return d;\r\n    });\r\n\r\n  useEffect(() => {\r\n    //  3] Setup functions for Scales ------------------//\r\n\r\n    //xscales\r\n    const xScale = d3\r\n      .scalePoint()\r\n      .domain(chartdata.map((d) => d.name))\r\n      .range([0 + padding, width - padding]);\r\n    console.log(\"Start - End\", xScale(\"Car\"), xScale(\"Cinema\"));\r\n\r\n    //Yscales\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([\r\n        0,\r\n        d3.max(chartdata, function (d) {\r\n          return d.value;\r\n        }),\r\n      ])\r\n      .range([height - padding, 0 + padding]);\r\n\r\n    console.log(\"Start - End\", yScale(0), yScale(10));\r\n\r\n    //  4] Setup functions to draw Lines ---------------//\r\n\r\n    const line = d3\r\n      .line()\r\n      .x((d) => xScale(d.name))\r\n      .y((d) => yScale(d.value))\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    console.log(\"chart draw commands\", line(chartdata));\r\n\r\n    //  5] Draw line        ---------------------------//\r\n    d3.select(svgRef.current)\r\n      .select(\"path\")\r\n      .attr(\"d\", (value) => line(chartdata))\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"white\");\r\n\r\n    //  6] Setup functions to draw X and Y Axes --------//\r\n    const xAxis = d3.axisBottom(xScale);\r\n    const yAxis = d3.axisLeft(yScale);\r\n\r\n    //  7] Draw x and y Axes   -------------------------//\r\n    d3.select(\"#xaxis\").remove();\r\n    d3.select(svgRef.current)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - padding})`)\r\n      .attr(\"id\", \"xaxis\")\r\n      .call(xAxis);\r\n\r\n    d3.select(\"#yaxis\").remove();\r\n    d3.select(svgRef.current)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${padding},0)`)\r\n      .attr(\"id\", \"yaxis\")\r\n      .call(yAxis);\r\n  }, [chartdata]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <svg id=\"chart\" ref={svgRef} viewBox=\"0 0 500 150\">\r\n          <path d=\"\" fill=\"none\" stroke=\"white\" strokeWidth=\"5\" />\r\n        </svg>\r\n        <p>\r\n          <button type=\"butto\" onClick={() => setChartdata(newData())}>\r\n            Click to refresh expenses data\r\n          </button>\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}